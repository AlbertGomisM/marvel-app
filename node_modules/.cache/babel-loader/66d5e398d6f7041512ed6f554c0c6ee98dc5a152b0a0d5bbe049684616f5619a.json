{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Albert Gomis Mul\\xE0\\\\Documents\\\\Assembler\\\\React\\\\Marvel\\\\marvel-app\\\\src\\\\UI\\\\Components\\\\body\\\\Body.jsx\",\n  _s = $RefreshSig$();\nimport fetchCharacters from \"../../../api/fetchCharacters\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card } from \"../card/Card\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Body = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchCharacters();\n        setCharacters(data); // Update the state with the fetched data\n      } catch (error) {\n        console.error(\"Error fetching characters:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  console.log(characters);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"Lpb9AbqKJ07+xuj4aZ1twNw87e0=\");\n_c = Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["fetchCharacters","Card","useState","useEffect","jsxDEV","_jsxDEV","Body","_s","characters","setCharacters","fetchData","data","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Albert Gomis MulÃ /Documents/Assembler/React/Marvel/marvel-app/src/UI/Components/body/Body.jsx"],"sourcesContent":["import fetchCharacters from \"../../../api/fetchCharacters\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card } from \"../card/Card\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport const Body = () => {\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await fetchCharacters();\r\n        setCharacters(data); // Update the state with the fetched data\r\n      } catch (error) {\r\n        console.error(\"Error fetching characters:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  console.log(characters);\r\n  return (\r\n    <div >\r\n\r\n      <Card />\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,eAAe,MAAM,8BAA8B;AAC1D,OAAO,sCAAsC;AAC7C,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMX,eAAe,CAAC,CAAC;QACpCS,aAAa,CAACE,IAAI,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDF,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACNG,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;EACvB,oBACEH,OAAA;IAAAU,QAAA,eAEEV,OAAA,CAACJ,IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAZ,EAAA,CAtBYD,IAAI;AAAAc,EAAA,GAAJd,IAAI;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}